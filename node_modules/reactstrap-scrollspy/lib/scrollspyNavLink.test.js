"use strict";

var _react = _interopRequireDefault(require("react"));

var _enzyme = _interopRequireWildcard(require("enzyme"));

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

var _scrollspyNavLink = _interopRequireDefault(require("./scrollspyNavLink"));

var _scrollspyContext = _interopRequireDefault(require("./scrollspyContext"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

_enzyme["default"].configure({
  adapter: new _enzymeAdapterReact["default"]()
});

var setup = function setup() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    updatedName: '',
    updateNavbar: jest.fn()
  };
  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var children = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _react["default"].createElement("div", null);
  return (0, _enzyme.mount)(_react["default"].createElement(_scrollspyContext["default"].Provider, {
    value: value
  }, _react["default"].createElement(_scrollspyNavLink["default"], props, children)));
};

var findByTestAttr = function findByTestAttr(wrapper, val) {
  return wrapper.find("[data-test=\"".concat(val, "\"]"));
};

describe('<ScrollspyNavLink />', function () {
  it('renders without error', function () {
    var wrapper = setup();
    var scrollspyComponent = findByTestAttr(wrapper, 'component-scrollspy-nav-link');
    expect(scrollspyComponent.length).toBe(1);
  });
});